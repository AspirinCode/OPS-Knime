<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="./default.png" type="Source">
    <name>SWAGGER_GenerateGET_URL</name>

    <shortDescription>
        Creates an 'executable' HTTP-GET url based on a service selected from a SWAGGER file.
    </shortDescription>
    
    <fullDescription>
        <intro> 

SWAGGER is a specification and complete framework implementation for describing, producing, consuming, and visualizing RESTful web services.
For more info on SWAGGER, please look here: https://developers.helloreverb.com/swagger.
This Knime node depends on the output generated by the SWAGGER_ServiceTemplates node that parsed the provided SWAGGER file and created a set of HTTP-GET url templates. 
The input for this node is a manually selected template from that came from that node. This node instantiates the variables in the template with
the values that are in the second input table. The output of this node is the result of this instantiation, which is a http-get url (you
can actually copy-paste it in your browser and see the results.  
</intro>
        
        

    </fullDescription>
       
       
    <ports>
        <inPort index="0" name="Variable instance table">A http-get template generated by a SWAGGER_ServiceTemplates node</inPort>
        <inPort index="1" name="Variable values"> The values for the variables from the template. The column name is the variable name, the cells are the values. Note:
        currently the node only takes the first row.</inPort>
        <!-- possibly more input ports here-->
        <outPort index="0" name="Instantiated REST Url">A set of service url templates. Select one of those for the input of the SWAGGER_GenerateGET_URL node</outPort>
        <!-- possibly more output ports here-->
    </ports>    
    <views>
                   <view index="0" name="TODO...">TODO...</view>
        <!--view index="1" name="name of second view">Description of second view...</view-->
    </views>
</knimeNode>